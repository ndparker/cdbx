[tox]
skipsdist = True
skip_missing_interpreters = True
envlist =
    py27
    py34
    py35
    py36
    py37
    cov-report

[pytest]
doctest_optionflags = IGNORE_EXCEPTION_DETAIL ALLOW_UNICODE ALLOW_BYTES ELLIPSIS

[testenv]
usedevelop = True
deps = -rtests/requirements.txt
setenv =
    COVERAGE_FILE = .coverage.{envname}
passenv =
    CFLAGS
    CPPFLAGS
    LDFLAGS
    PKG_CONFIG_PATH
commands =
    py.test -vv -s -c test.ini \
        --cov=cdbx \
        --cov-config=test.ini \
        --cov-report= \
        --no-cov-on-fail \
        --doctest-modules --color=yes \
        tests

[testenv:cov-report]
usedevelop = False
deps = -rtests/coverage.txt

setenv =
    COVERAGE_FILE = .coverage
commands =
    coverage erase
    coverage combine
    coverage report --rcfile test.ini
    coverage html --rcfile test.ini
    - python -c 'import sys, os; os.mkdir(sys.argv[1])' "docs/gcov"
    - gcovr --print-summary --html-details \
        --output docs/gcov/index.html


[run]
branch = True

[report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

# Special part-branch exclusion
partial_branches =
    # Re-enable standard pragma
    pragma: no branch

# Source files to exclude
omit =

ignore_errors = True

[html]
directory = docs/coverage


# vim: nowrap
